import base64
from PyQt5.QtGui import QPixmap

def get_logo_pixmap():
    base64_str = ""
    image_bytes = base64.b64decode(base64_str)
    pixmap = QPixmap()
    pixmap.loadFromData(image_bytes)
    return pixmap